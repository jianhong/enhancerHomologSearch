// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// RClustalW
SEXP RClustalW(SEXP rInputSeqs, SEXP rCluster, SEXP rGapOpen, SEXP rGapExtend, SEXP rMaxIters, SEXP rsubstitutionMatrix, SEXP rType, SEXP rVerbose, SEXP rParams);
RcppExport SEXP _enhancerHomologSearch_RClustalW(SEXP rInputSeqsSEXP, SEXP rClusterSEXP, SEXP rGapOpenSEXP, SEXP rGapExtendSEXP, SEXP rMaxItersSEXP, SEXP rsubstitutionMatrixSEXP, SEXP rTypeSEXP, SEXP rVerboseSEXP, SEXP rParamsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type rInputSeqs(rInputSeqsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type rCluster(rClusterSEXP);
    Rcpp::traits::input_parameter< SEXP >::type rGapOpen(rGapOpenSEXP);
    Rcpp::traits::input_parameter< SEXP >::type rGapExtend(rGapExtendSEXP);
    Rcpp::traits::input_parameter< SEXP >::type rMaxIters(rMaxItersSEXP);
    Rcpp::traits::input_parameter< SEXP >::type rsubstitutionMatrix(rsubstitutionMatrixSEXP);
    Rcpp::traits::input_parameter< SEXP >::type rType(rTypeSEXP);
    Rcpp::traits::input_parameter< SEXP >::type rVerbose(rVerboseSEXP);
    Rcpp::traits::input_parameter< SEXP >::type rParams(rParamsSEXP);
    rcpp_result_gen = Rcpp::wrap(RClustalW(rInputSeqs, rCluster, rGapOpen, rGapExtend, rMaxIters, rsubstitutionMatrix, rType, rVerbose, rParams));
    return rcpp_result_gen;
END_RCPP
}
// RMuscle
SEXP RMuscle(SEXP rInputSeq, SEXP rCluster, SEXP rGapOpening, SEXP rGapExtension, SEXP rMaxiters, SEXP rSubstitutionMatrix, SEXP rType, SEXP rVerbose, SEXP rParams);
RcppExport SEXP _enhancerHomologSearch_RMuscle(SEXP rInputSeqSEXP, SEXP rClusterSEXP, SEXP rGapOpeningSEXP, SEXP rGapExtensionSEXP, SEXP rMaxitersSEXP, SEXP rSubstitutionMatrixSEXP, SEXP rTypeSEXP, SEXP rVerboseSEXP, SEXP rParamsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type rInputSeq(rInputSeqSEXP);
    Rcpp::traits::input_parameter< SEXP >::type rCluster(rClusterSEXP);
    Rcpp::traits::input_parameter< SEXP >::type rGapOpening(rGapOpeningSEXP);
    Rcpp::traits::input_parameter< SEXP >::type rGapExtension(rGapExtensionSEXP);
    Rcpp::traits::input_parameter< SEXP >::type rMaxiters(rMaxitersSEXP);
    Rcpp::traits::input_parameter< SEXP >::type rSubstitutionMatrix(rSubstitutionMatrixSEXP);
    Rcpp::traits::input_parameter< SEXP >::type rType(rTypeSEXP);
    Rcpp::traits::input_parameter< SEXP >::type rVerbose(rVerboseSEXP);
    Rcpp::traits::input_parameter< SEXP >::type rParams(rParamsSEXP);
    rcpp_result_gen = Rcpp::wrap(RMuscle(rInputSeq, rCluster, rGapOpening, rGapExtension, rMaxiters, rSubstitutionMatrix, rType, rVerbose, rParams));
    return rcpp_result_gen;
END_RCPP
}
// rushuffle
CharacterVector rushuffle(CharacterVector x, IntegerVector k, IntegerVector n);
RcppExport SEXP _enhancerHomologSearch_rushuffle(SEXP xSEXP, SEXP kSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type k(kSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(rushuffle(x, k, n));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_enhancerHomologSearch_RClustalW", (DL_FUNC) &_enhancerHomologSearch_RClustalW, 9},
    {"_enhancerHomologSearch_RMuscle", (DL_FUNC) &_enhancerHomologSearch_RMuscle, 9},
    {"_enhancerHomologSearch_rushuffle", (DL_FUNC) &_enhancerHomologSearch_rushuffle, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_enhancerHomologSearch(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
